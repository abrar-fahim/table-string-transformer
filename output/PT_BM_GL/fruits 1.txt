---------------
Results for fruits 1
Coverage in golden matched rows: 21/21 = 100.00%
Best pattern Coverage  in golden matched rows: 90.48%
Coverage: 21/21 = 100.00%
Best pattern Coverage: 90.48%
Total Patterns: 3, input rows: 21
Average Input length (Num chars): 9.523809523809524, Average output length (Num chars): 7.857142857142857
Max Tokens: 3
Total Run time: 0.011810064315795898, Generalization time:0.0
Total number of placeholder combinations (After removing duplicates): 43
Total number of all generated patterns: 555
Number of duplicate patterns removed: 183
Total number of generated patterns to try: 372
Effective Generalizations: 0

Number of all generated placeholder comb.: 96
Number of all remaining placeholder comb.: 96
Number of all removed placeholder comb.: 0
Number of init remaining placeholder comb.: 48
Number of splitted remaining placeholder comb.: 48
Number of removed init placeholder comb.: 0
Number of removed splitted placeholder comb.: 0

placeholder generation time: 0.003257274627685547
extract patterns time: 0.0013439655303955078
duplicate patterns remove time: 0.0005650520324707031
patterns applying time: 0.0065157413482666016
get covering set time: 0.00012803077697753906

Number of all patterns that applied on all rows (#pattern * #rows) (complexity): 7812
Number of successful patterns: 482
Number of failed patterns: 7330
Number of failed patterns filtered by cache (cache hit): 5792

Golden Row Matching: P:1.0,R:1.0,F:1.0
Params: {'max_tokens': 3, 'max_blocks': 3, 'generalize': False, 'sample_size': None, 'token_splitters': [' '], 'remove_duplicate_patterns': True, 'switch_literals_placeholders': True, 'only_first_match': False, 'units_to_extract': [<class 'Transformation.Blocks.LiteralPatternBlock.LiteralPatternBlock'>, <class 'Transformation.Blocks.PositionPatternBlock.PositionPatternBlock'>, <class 'Transformation.Blocks.TokenPatternBlock.TokenPatternBlock'>, <class 'Transformation.Blocks.SplitSubstrPatternBlock.SplitSubstrPatternBlock'>]}
pattern list: {
                 {[Split: ' ', 0 ], } -> 19/21
                     |->('apple dried', 'apple')
                     |->('apple no skin', 'apple')
                     |->('apricot raw', 'apricot')
                     |->('apricot dried', 'apricot')
                     |->('avocado', 'avocado')
                     |->('blackberries', 'blackberries')
                     |->('blueberries', 'blueberries')
                     |->('blueberries sweetened', 'blueberries')
                     |->('cantaloupe', 'cantaloupe')
                     |->('grapefruit', 'grapefruit')
                     |->('grapes', 'grapes')
                     |->('kiwi', 'kiwi')
                     |->('mango', 'mango')
                     |->('papaya', 'papaya')
                     |->('peach', 'peach')
                     |->('pear', 'pear')
                     |->('pineapple', 'pineapple')
                     |->('raspberries', 'raspberries')
                     |->('strawberries', 'strawberries')
                 {[Split: 's', 0 ], } -> 10/21
                     |->('avocado', 'avocado')
                     |->('cantaloupe', 'cantaloupe')
                     |->('grapefruit', 'grapefruit')
                     |->('kiwi', 'kiwi')
                     |->('mango', 'mango')
                     |->('nectarines', 'nectarine')
                     |->('papaya', 'papaya')
                     |->('peach', 'peach')
                     |->('pear', 'pear')
                     |->('pineapple', 'pineapple')
                 {[LIT:'tangerine'], } -> 1/21  -- Original Trans.: {[LIT:'tang'], [Substr:(8-9)], [SplitSubstr: 't', 1, (4-8) ], }
                     |->('tangarine', 'tangerine')

****Golden rows apply patterns******
golden pattern list: {
                 {[Split: ' ', 0 ], } -> 19/21
                     |->('apple dried', 'apple')
                     |->('apple no skin', 'apple')
                     |->('apricot raw', 'apricot')
                     |->('apricot dried', 'apricot')
                     |->('avocado', 'avocado')
                     |->('blackberries', 'blackberries')
                     |->('blueberries', 'blueberries')
                     |->('blueberries sweetened', 'blueberries')
                     |->('cantaloupe', 'cantaloupe')
                     |->('grapefruit', 'grapefruit')
                     |->('grapes', 'grapes')
                     |->('kiwi', 'kiwi')
                     |->('mango', 'mango')
                     |->('papaya', 'papaya')
                     |->('peach', 'peach')
                     |->('pear', 'pear')
                     |->('pineapple', 'pineapple')
                     |->('raspberries', 'raspberries')
                     |->('strawberries', 'strawberries')
                 {[LIT:'tangerine'], } -> 1/21
                     |->('tangarine', 'tangerine')
                 {[Split: 's', 0 ], } -> 10/21
                     |->('avocado', 'avocado')
                     |->('cantaloupe', 'cantaloupe')
                     |->('grapefruit', 'grapefruit')
                     |->('kiwi', 'kiwi')
                     |->('mango', 'mango')
                     |->('nectarines', 'nectarine')
                     |->('papaya', 'papaya')
                     |->('peach', 'peach')
                     |->('pear', 'pear')
                     |->('pineapple', 'pineapple')

--- Not covered inputs:
****************

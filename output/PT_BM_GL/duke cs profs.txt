---------------
Results for duke cs profs
Coverage in golden matched rows: 44/44 = 100.00%
Best pattern Coverage  in golden matched rows: 61.36%
Coverage: 44/44 = 100.00%
Best pattern Coverage: 61.36%
Total Patterns: 4, input rows: 44
Average Input length (Num chars): 15.159090909090908, Average output length (Num chars): 14.863636363636363
Max Tokens: 3
Total Run time: 2.6520230770111084, Generalization time:0.0
Total number of placeholder combinations (After removing duplicates): 528
Total number of all generated patterns: 88382
Number of duplicate patterns removed: 47758
Total number of generated patterns to try: 40624
Effective Generalizations: 0

Number of all generated placeholder comb.: 770
Number of all remaining placeholder comb.: 664
Number of all removed placeholder comb.: 106
Number of init remaining placeholder comb.: 416
Number of splitted remaining placeholder comb.: 248
Number of removed init placeholder comb.: 0
Number of removed splitted placeholder comb.: 106

placeholder generation time: 0.12613821029663086
extract patterns time: 0.2352147102355957
duplicate patterns remove time: 0.16141533851623535
patterns applying time: 2.1131227016448975
get covering set time: 0.016132116317749023

Number of all patterns that applied on all rows (#pattern * #rows) (complexity): 1787456
Number of successful patterns: 45257
Number of failed patterns: 1742199
Number of failed patterns filtered by cache (cache hit): 1525568

Golden Row Matching: P:1.0,R:1.0,F:1.0
Params: {'max_tokens': 3, 'max_blocks': 3, 'generalize': False, 'sample_size': None, 'token_splitters': [' '], 'remove_duplicate_patterns': True, 'switch_literals_placeholders': True, 'only_first_match': False, 'units_to_extract': [<class 'Transformation.Blocks.LiteralPatternBlock.LiteralPatternBlock'>, <class 'Transformation.Blocks.PositionPatternBlock.PositionPatternBlock'>, <class 'Transformation.Blocks.TokenPatternBlock.TokenPatternBlock'>, <class 'Transformation.Blocks.SplitSubstrPatternBlock.SplitSubstrPatternBlock'>]}
pattern list: {
                 {[Split: ' ', 1 ], [LIT:' '], [Split: ' ', 0 ], } -> 27/44
                     |->('astrachan owen', 'owen astrachan')
                     |->('babu shivnath', 'shivnath babu')
                     |->('benson theo', 'theo benson')
                     |->('calderbank robert', 'robert calderbank')
                     |->('chakrabarty krishnendu', 'krishnendu chakrabarty')
                     |->('conitzer vincent', 'vincent conitzer')
                     |->('cox landon', 'landon cox')
                     |->('dwyer chris', 'chris dwyer')
                     |->('farsiu sina', 'sina farsiu')
                     |->('gordan raluca-mihaela', 'raluca-mihaela gordan')
                     |->('heller katherine', 'katherine heller')
                     |->('hilton andrew', 'andrew hilton')
                     |->('kim jungsang', 'jungsang kim')
                     |->('machanavajjhala ashwin', 'ashwin machanavajjhala')
                     |->('maggioni mauro', 'mauro maggioni')
                     |->('maggs bruce', 'bruce maggs')
                     |->('mukherjee sayan', 'sayan mukherjee')
                     |->('munagala kamesh', 'kamesh munagala')
                     |->('panigrahi debmalya', 'debmalya panigrahi')
                     |->('sapiro guillermo', 'guillermo sapiro')
                     |->('sun xiaobai', 'xiaobai sun')
                     |->('tomasi carlo', 'carlo tomasi')
                     |->('yang jun', 'jun yang')
                     |->('yang xiaowei', 'xiaowei yang')
                     |->('hsu lisa r.', 'lisa hsu')
                     |->('loveland donald w.', 'donald loveland')
                     |->('wagner robert a.', 'robert wagner')
                 {[Split: ' ', [1, 2] ], [LIT:' '], [Split: ' ', 0 ], } -> 15/44
                     |->('agarwal pankaj k.', 'pankaj k. agarwal')
                     |->('schmidler scott c.', 'scott c. schmidler')
                     |->('sorin daniel j.', 'daniel j. sorin')
                     |->('bryant robert l.', 'robert l. bryant')
                     |->('trivedi kishor s.', 'kishor s. trivedi')
                     |->('chase jeffrey s.', 'jeffrey s. chase')
                     |->('ellis carla schlatter', 'carla schlatter ellis')
                     |->('donald bruce r.', 'bruce r. donald')
                     |->('hartemink alexander j.', 'alexander j. hartemink')
                     |->('lebeck alvin r.', 'alvin r. lebeck')
                     |->('lee benjamin c.', 'benjamin c. lee')
                     |->('lucic richard a.', 'richard a. lucic')
                     |->('parr ronald e.', 'ronald e. parr')
                     |->('reif john h.', 'john h. reif')
                     |->('rodger susan h.', 'susan h. rodger')
                 {[LIT:'jeffrey r. n. forbes'], } -> 1/44  -- Original Trans.: {[Substr:(7-20)], [SplitSubstr: 'j', 1, (9-10) ], [SplitSubstr: 'j', 0, (0-6) ], }
                     |->('forbes jeffrey r. n.', 'jeffrey r. n. forbes')
                 {[LIT:'john a. board'], } -> 1/44  -- Original Trans.: {[Split: ' ', [2, 3] ], [SplitSubstr: 'r', 1, (1-2) ], [Substr:(0-5)], }
                     |->('board jr. john a.', 'john a. board')

****Golden rows apply patterns******
golden pattern list: {
                 {[Split: ' ', 1 ], [LIT:' '], [Split: ' ', 0 ], } -> 27/44
                     |->('astrachan owen', 'owen astrachan')
                     |->('babu shivnath', 'shivnath babu')
                     |->('benson theo', 'theo benson')
                     |->('calderbank robert', 'robert calderbank')
                     |->('chakrabarty krishnendu', 'krishnendu chakrabarty')
                     |->('conitzer vincent', 'vincent conitzer')
                     |->('cox landon', 'landon cox')
                     |->('dwyer chris', 'chris dwyer')
                     |->('farsiu sina', 'sina farsiu')
                     |->('gordan raluca-mihaela', 'raluca-mihaela gordan')
                     |->('heller katherine', 'katherine heller')
                     |->('hilton andrew', 'andrew hilton')
                     |->('kim jungsang', 'jungsang kim')
                     |->('machanavajjhala ashwin', 'ashwin machanavajjhala')
                     |->('maggioni mauro', 'mauro maggioni')
                     |->('maggs bruce', 'bruce maggs')
                     |->('mukherjee sayan', 'sayan mukherjee')
                     |->('munagala kamesh', 'kamesh munagala')
                     |->('panigrahi debmalya', 'debmalya panigrahi')
                     |->('sapiro guillermo', 'guillermo sapiro')
                     |->('sun xiaobai', 'xiaobai sun')
                     |->('tomasi carlo', 'carlo tomasi')
                     |->('yang jun', 'jun yang')
                     |->('yang xiaowei', 'xiaowei yang')
                     |->('hsu lisa r.', 'lisa hsu')
                     |->('loveland donald w.', 'donald loveland')
                     |->('wagner robert a.', 'robert wagner')
                 {[Split: ' ', [1, 2] ], [LIT:' '], [Split: ' ', 0 ], } -> 15/44
                     |->('agarwal pankaj k.', 'pankaj k. agarwal')
                     |->('schmidler scott c.', 'scott c. schmidler')
                     |->('sorin daniel j.', 'daniel j. sorin')
                     |->('bryant robert l.', 'robert l. bryant')
                     |->('trivedi kishor s.', 'kishor s. trivedi')
                     |->('chase jeffrey s.', 'jeffrey s. chase')
                     |->('ellis carla schlatter', 'carla schlatter ellis')
                     |->('donald bruce r.', 'bruce r. donald')
                     |->('hartemink alexander j.', 'alexander j. hartemink')
                     |->('lebeck alvin r.', 'alvin r. lebeck')
                     |->('lee benjamin c.', 'benjamin c. lee')
                     |->('lucic richard a.', 'richard a. lucic')
                     |->('parr ronald e.', 'ronald e. parr')
                     |->('reif john h.', 'john h. reif')
                     |->('rodger susan h.', 'susan h. rodger')
                 {[LIT:'jeffrey r. n. forbes'], } -> 1/44
                     |->('forbes jeffrey r. n.', 'jeffrey r. n. forbes')
                 {[LIT:'john a. board'], } -> 1/44
                     |->('board jr. john a.', 'john a. board')

--- Not covered inputs:
****************
